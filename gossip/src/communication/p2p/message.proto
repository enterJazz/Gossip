syntax = "proto3";

package gossip.communicator.p2p.message;

message Addr {
  oneof ip {
    fixed32 v4 = 1;
    bytes v6 = 2;
  }
  uint32 port = 3;
}

enum MsgTypes {
  VERIFICATION_REQUEST = 0;
  VERIFICATION_RESPONSE = 1;
  DATA = 2;
  TEST = 3;
}

message VerificationRequest {
  bytes challenge = 1;
  uint32 difficulty = 2;
  bytes pub_key = 3;
}

message VerificationResponse {
  bytes challenge = 1;
  bytes remote_identity = 2;
  bytes pub_key = 3;
  bytes nonce = 4;
}



enum VerificationResponseStatus {
  INVALID = 0;
  TIMEOUT = 1;
  OK = 2;
}

message VerificationValidationResponse {
  VerificationResponseStatus status = 1;
}

message Peer {
  bytes identity = 1;
  Addr address = 2;
}

message Rumor {
  uint32 ttl = 1;
  repeated Peer peers = 2;
}

message PullRequest { uint32 ttl = 1; }

message Data {
  uint32 ttl = 1;
  uint32 data_type = 2;
  bytes payload = 3;
}

message Envelope {

  oneof msg {
    VerificationRequest verificationRequest = 2;
    VerificationResponse verificationResponse = 3;
    VerificationValidationResponse verificationValidationResponse = 4;
    Data data = 5;
    Rumor rumor = 6;
    PullRequest pull = 7;
  }
}